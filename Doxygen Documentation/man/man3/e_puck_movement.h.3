.TH "C:/Users/Stefan/Documents/GitHub/Final_Project/lib/e_puck_movement.h" 3 "Mon Mar 31 2014" "Version 0.2" "Major Project Documentation" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/Users/Stefan/Documents/GitHub/Final_Project/lib/e_puck_movement.h \- 
.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBstop_robot\fP ()"
.br
.ti -1c
.RI "void \fBmove_forward\fP (double dSpeed, double dDist)"
.br
.ti -1c
.RI "void \fBturn_left\fP (double dSpeed)"
.br
.ti -1c
.RI "void \fBturn_right\fP (double dSpeed)"
.br
.ti -1c
.RI "void \fBturn_angle\fP (double dAngle, double dSpeed)"
.br
.ti -1c
.RI "void \fBset_motor_speed\fP (double dSpeedL, double dSpeedR)"
.br
.ti -1c
.RI "double * \fBget_encoder_positions\fP ()"
.br
.ti -1c
.RI "double * \fBcompute_odometry_data\fP ()"
.br
.ti -1c
.RI "void \fBUMBmark\fP (double dSpeed, double dDistance)"
.br
.ti -1c
.RI "void \fBmeasure_clockWise\fP (double dSpeed, double dDistance)"
.br
.ti -1c
.RI "void \fBmeasure_CounterClockWise\fP (double dSpeed, double dDistance)"
.br
.ti -1c
.RI "void \fBset_leds\fP (int iActive)"
.br
.ti -1c
.RI "void \fBcontroll_angle\fP ()"
.br
.ti -1c
.RI "void \fBcheck_rotation\fP (double cur_rot, double want_rot, double dSpeed)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "void check_rotation (doublecur_rot, doublewant_rot, doubledSpeed)"
FUnction to compare the current heading to the wanted heading and fix the heading should it surpass a threshold 
.SS "double* compute_odometry_data ()"
Function to compute the robots current odometry data this includes the x and y placement as well as the rotation theta 
.SS "void controll_angle ()"

.SS "double* get_encoder_positions ()"
Function to get and return the current encoder position of the wheels 
.SS "void measure_clockWise (doubledSpeed, doubledDistance)"
Function to measure the movement accuracy by driving a clockwise square\&. This is part of the UMBmark algorithm 
.SS "void measure_CounterClockWise (doubledSpeed, doubledDistance)"
Function to measure the movement accuracy by driving a counter-clockwise square\&. This is part of the UMBmark algorithm 
.SS "void move_forward (doubledSpeed, doubledDist)"
Function to move the robot forward a given distance at a given speed 
.SS "void set_leds (intiActive)"
set the status of the LEDs 
.SS "void set_motor_speed (doubledSpeedL, doubledSpeedR)"
Function to set the motor speed of the robot 
.SS "void stop_robot ()"
Function to stop the robot 
.SS "void turn_angle (doubledAngle, doubledSpeed)"
Function to turn the robot a given angle with a given speed 
.SS "void turn_left (doubledSpeed)"
Function to turn left 
.SS "void turn_right (doubledSpeed)"
Function to turn right 
.SS "void UMBmark (doubledSpeed, doubledDistance)"
University of Michigan Benchmark 
.SH "Author"
.PP 
Generated automatically by Doxygen for Major Project Documentation from the source code\&.
